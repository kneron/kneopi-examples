;; ---------------------------------------------------------------------------------------------------------
;; [Rule]
;; 
;; 		First try to load the file [AutoWhiteBalance_M_N.cfg].
;; 
;; 		If it's not there, then load AutoWhiteBalance.cfg.
;; 
;; ---------------------------------------------------------------------------------------------------------
;; [AutoWhiteBalance_M_N.cfg] 
;; 
;;      --> are tuned based on the dwAIScene(M) & dwPQMode(N) settings.
;;      
;;      --> " M " means the current dwAIScene value comes from "Resource/AutoScene/autoscene_conf.cfg" file; 
;;      --> " N " means the current dwPQMode value comes from "Resource/AutoScene/autoscene_conf.cfg" file.
;; 
;; ---------------------------------------------------------------------------------------------------------
;; ---------------------------------------------------------------------------------------------------------
;; [v2.2.0.5]
;; ---------------------------------------------------------------------------------------------------------
;; ---------------------------------------------------------------------------------------------------------

[AWBCtrlOptions]
	; 0: auto mode, 1: simple mode, 12: ai mode, 13: ai-simple mode, 14: ai-auto mode.
	; This is the initial setting. 
	; This value will be overwritten by the mode setting in the file: "Resource/AutoScene/autoscene_ref.json".
	dwMode = 1	

	; User defined R/G/B gain in manual mode.
	; These are the initial settings. 
	; They will be overwritten by the manual gain setting in the file: "Resource/autoscene_conf.cfg".
	dwManualGainR = 1024
	dwManualGainG = 1024
	dwManualGainB = 1024
	dwManualColorTemp = 2000 ; [0, 20,000], user defined color temp in manual mode. 0: lib calculate automatically
	
	bUpdateWinPriority = 1 ; [0, 1], default:1, whether to apply AwbWinPriority_M_N.table.	

[AWBSpeedOptions]
	bEnableSpeedUp = 1	; [0,  1], 0: the most smooth convergence. 1: apply belowing speed value.
	dwSpeed = 3			; [1, 16], 1: slowest, 16: fastest.
	dwOutdoorSpeed = 1	; [1, 16], speed setting for outdoor scene. only support for auto-mode.
	dwIndoorSpeed =  2	; [1, 16], speed setting for indoor scene. only support for auto-mode.


[AWBCTCOptions] ;only support for auto-mode.
	dwSceneType = 0				; [0: Normal, 1: Outdoor, 2: Indoor, 7: Auto(switch scene by current EV)
	dwEVThdLow = 1000			; [1, 1,600,000,000, low ev thd for preventing hunting.
	dwEVThdHigh = 1000			; [1, 1,600,000,000, high ev thd for preventing hunting.
	dwOutdoorCTStartIndex = 3 ; [0, dwRefCTNodeNum-1, define the specific CT curve index for outdoor scene.
	dwOutdoorCTEndIndex   = 5	; [0, dwRefCTNodeNum-1, define the specific CT curve index for outdoor scene.
	dwIndoorCTStartIndex  = 0	; [0, dwRefCTNodeNum-1, define the specific CT curve index for indoor scene.
	dwIndoorCTEndIndex 	  = 5	; [0, dwRefCTNodeNum-1, define the specific CT curve index for indoor scene.
	    
[AWBInitialOptions]
	bEnableInitSetting = 1		; [0,  1, 0: default init setting; 1: apply user defined initial gain setting.
	
	dwInitGainR = 1620			; [1, 8191, initial R gain setting.
	dwInitGainB = 2200			; [1, 8191, initial B gain setting.
	dwInitColorTemp = 6000		; [1, 20,000, initial color temp setting.

	dwOutdoorInitGainR 	= 1620		; [1, 8191, initial setting for outdoor scene.
	dwOutdoorInitGainB 	= 2200		; [1, 8191, initial setting for outdoor scene.
	dwOutdoorInitColorTemp = 6000	; [1, 20,000, initial setting for outdoor scene.

	dwIndoorInitGainR 	= 1900		; [1, 8191, initial setting for indoor scene.
	dwIndoorInitGainB 	= 1800		; [1, 8191, initial setting for indoor scene.
	dwIndoorInitColorTemp = 4200	; [1, 20,000, initial setting for indoor scene.

[AWBPreferenceOptions]
	;;	Type0: Disable preference ratio.
	;; 
	;;	Type1~3: Lookup the following weighting table by different index.
	;;		1: Auto R/B ratio based on "current CT"  and  "current EV" .
	;;		2: Auto R/B ratio based on   "fixed CT"  and  "current EV" .
	;;		3: Auto R/B ratio based on   "fixed EV"  and  "current CT" .
	;;  		
	;; 	Type4: assign R/B Ratio manually and directly.

	dwPreferenceType = 0	; [0, 4]
	dwPrefCT = 6500			; [1, 20000], be effective when dwPreferenceType=2
	dwPrefEV = 5000			; [1, 1,600,000,000], be effective when dwPreferenceType=3
	
	dwRatioR = 1024			; [1, 8191], 1024:1x, be effective when dwPreferenceType=4
	dwRatioG = 1024			; [1, 8191], 1024:1x, be effective when dwPreferenceType=4
	dwRatioB = 1024			; [1, 8191], 1024:1x, be effective when dwPreferenceType=4

	; -------------------------------------------------------------------------------------------------------
	adwAdvancePrefEV =	   100, 1000, 2500, 5000, 7500,10000,15000,50000,100000,500000,5000000,7000000 ; // [12] [1, 1,600,000,000]
	; -------------------------------------------------------------------------------------------------------
	adw02300KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw02300KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw02300KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	; -------------------------------------------------------------------------------------------------------
	adw02800KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1030,  1040,  1060,   1080,   1100 ; // [12] [1, 4096], 1024:1x ratio
	adw02800KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw02800KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	; -------------------------------------------------------------------------------------------------------
	adw04000KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1030, 1030,  1060,  1070,   1080,   1100 ; // [12] [1, 4096], 1024:1x ratio
	adw04000KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw04000KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1000, 1000,  1000,  1000,    920,    900 ; // [12] [1, 4096], 1024:1x ratio
	; -------------------------------------------------------------------------------------------------------
	adw05000KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1030,   1040 ; // [12] [1, 4096], 1024:1x ratio
	adw05000KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw05000KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1020,   1010,   1010 ; // [12] [1, 4096], 1024:1x ratio
	; -------------------------------------------------------------------------------------------------------
	adw06500KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw06500KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	adw06500KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio
	; -------------------------------------------------------------------------------------------------------
	adw07500KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1010 ; // [12] [1, 4096], 1024:1x ratio
	adw07500KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio	
	adw07500KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1028,   1030 ; // [12] [1, 4096], 1024:1x ratio
	; -------------------------------------------------------------------------------------------------------
	adw10000KRatioR = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1000,   1000 ; // [12] [1, 4096], 1024:1x ratio
	adw10000KRatioG = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio	
	adw10000KRatioB = 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  1024,  1024,   1024,   1024 ; // [12] [1, 4096], 1024:1x ratio


[AWBAICtrlOptions]

	dwAIConfidenceThd = 1600; [1,4096], if grid-confidence <= thd, set as un-valid grid.
	
	;;------------------------------------------------------------------------------------------------
	;;{{ For all of AI related mode.------------------------------------------------------------------
	;;------------------------------------------------------------------------------------------------
	; used in the AI-process for obtaining R/G/B gain values.
	; 0: disable, 
	; 1: Directly filter out the CTC-unValid grids.
	; 2: Decrease weighting of the CTC-unValid grids.
	byCTCFilterType  = 0 ; [0, 2]

	;;------------------------------------------------------------------------------------------------
	;;{{ For "AI-Simple mode" or "AI-Auto mode".------------------------------------------------------
	;;------------------------------------------------------------------------------------------------
	; used in the Auto/Simple-process for obtaining R/G/B gain values.
	; 0: disable, 
	; 1: Directly filter out the AI-unValid grids.
	; 2: Decrease weighting of the AI-unValid grids. [recommend]

	byAIFilterType  = 2 ; [0, 2]

[AWBAIWeightingOptions]
	;; --------------------------------------------------------------------
	;; The following default setting is only effective by using seg model.
	;; --------------------------------------------------------------------

	bEnableClassSet01 = 1	; enable the 1st class setting.
	bEnableClassSet02 = 1	; enable the 2nd class setting.
	bEnableClassSet03 = 0	; enable the 3rd class setting.
	
	;; --------------------------------------------------------------------------------
	;; 0: road; 1:sidewalk; 2:building; 3;wall; 4:fence; 5:pole;
	;; 6: traffic light ; 7:traffic sign ; 8:vegetation; 9:terrain; 10:sky; 11:person
	;; --------------------------------------------------------------------------------
	adwClassSet01Index =        0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11 ;[12], user defined class set of AI.
	adwClassSet01Weight = 1424, 1024, 100, 1024, 620, 620, 0, 0, 0, 0, 0, 800 ;[12], user defined weighting of each class set index.
	adwClassSet01ConfRatio = 1024, 1024,1100, 900, 900, 900, 900, 900, 1324, 900, 1324, 900 ;[12], adjust confidence value depends on the class.
	
	;; --------------------------------------------------------------------------------
	;; 12:rider; 13:car; 14:truck; 15:bus; 16:train; 17:motorcycle; 18:bicycle; 
	;; --------------------------------------------------------------------------------
	adwClassSet02Index     =   12,   13,   14,   15,  16,   17,   18,  19,  20,  21,  22,  23 ;[12], 2nd set.
	adwClassSet02Weight    =  800,    0,    0,    0,   0,  800,  800,   0,   0,   0,   0,   0 ;[12], 2nd set, [1, 4096], 1024:1x ratio 
	adwClassSet02ConfRatio = 1024, 1000, 1100, 1100, 900, 1024, 1024, 900, 900, 900, 900, 900 ;[12], 2nd set, [1, 4096], 1024:1x ratio
	
	;; --------------------------------------------------------------------------------
	adwClassSet03Index =       24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35 ;[12], 3rd set.
	adwClassSet03Weight =       0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 ;[12], 3rd set, [1, 4096], 1024:1x ratio.  
	adwClassSet03ConfRatio = 1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024 ;[12], 3rd set, [1, 4096], 1024:1x ratio
	
	;; -------------------------------------------------------------------------------------------------------
	;; According to current EV, multiply a ratio to current confidence.
	;; -------------------------------------------------------------------------------------------------------
	adwAIEV = 100,  500, 1000, 2500, 5000,10000,15000,50000,100000,500000,5000000,7000000 ;[12] [1, 1,600,000,000]
	adwAIConfRatio = 0, 0,  0,  300,  800,  800,  900, 1024,  1024,  1024,   1024,   1024 ;[12] [1, 8192], 1024:1x ratio
	
